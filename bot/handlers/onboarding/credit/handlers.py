from telegram import Update
from telegram.ext import ContextTypes, ConversationHandler

from database.models import User
from .keyboards import get_credit_leasing_keyboard
from .enums import CreditLeasingConversionSteps
from ..handlers import update_user_phone_number, parse_russian_phone_number
from ..keyboards import get_main_keyboard, get_send_contact_keyboard


async def credit_leasing_start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–ö—Ä–µ–¥–∏—Ç/–ª–∏–∑–∏–Ω–≥ üè¶",
        reply_markup=get_credit_leasing_keyboard(),
    )

    return CreditLeasingConversionSteps.GET_SUBCATEGORY


async def help_with_credit(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data['credit_leasing'] = 'credit'

    if not context.database_user.phone_number:
        context.user_data['next_function'] = finish_credit
        await update.message.reply_text(
            "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç",
            reply_markup=get_send_contact_keyboard(),
        )
        return CreditLeasingConversionSteps.GET_PHONE

    return await finish_credit(update, context)


async def finish_credit(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç –ø–æ–¥–±–µ—Ä–µ—Ç –ª—É—á—à–∏–µ —É—Å–ª–æ–≤–∏—è –∫—Ä–µ–¥–∏—Ç–æ–≤–∞–Ω–∏—è - "
        "–∑–∞–¥–∞—Å—Ç –≤–∞–º –±—É–∫–≤–∞–ª—å–Ω–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–ø—Ä–æ—Å–æ–≤ –∏ —Å—Ä–∞–∑—É –Ω–∞—á–Ω–µ—Ç —Ä–∞–±–æ—Ç—É.	",
        reply_markup=get_main_keyboard(),
    )
    return ConversationHandler.END


async def help_with_leasing(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data['credit_leasing'] = 'leasing'

    if not context.database_user.phone_number:
        context.user_data['next_function'] = finish_leasing
        await update.message.reply_text(
            "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç",
            reply_markup=get_send_contact_keyboard(),
        )
        return CreditLeasingConversionSteps.GET_PHONE

    return await finish_leasing(update, context)


async def finish_leasing(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç –ø–æ–¥–±–µ—Ä–µ—Ç –ª—É—á—à–∏–µ —É—Å–ª–æ–≤–∏—è –ª–∏–∑–∏–Ω–≥–∞ - "
        "–∑–∞–¥–∞—Å—Ç –≤–∞–º –±—É–∫–≤–∞–ª—å–Ω–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–ø—Ä–æ—Å–æ–≤ –∏ —Å—Ä–∞–∑—É –Ω–∞—á–Ω–µ—Ç —Ä–∞–±–æ—Ç—É.	",
        reply_markup=get_main_keyboard(),
    )
    return ConversationHandler.END


async def set_phone_from_contact(update: Update, context: ContextTypes.DEFAULT_TYPE):
    phone = update.message.contact.phone_number
    database_user: User = context.database_user
    session = context.session
    await update_user_phone_number(session, database_user, phone)
    next_func = context.user_data.get('next_function')
    if next_func:
        return await next_func(update, context)
    return ConversationHandler.END


async def set_phone_from_text(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        phone = parse_russian_phone_number(update.message.text)
    except ValueError:
        await update.message.reply_text(
            "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑",
            reply_markup=get_main_keyboard(),
        )
        return
    database_user: User = context.database_user
    session = context.session
    await update_user_phone_number(session, database_user, phone)
    next_func = context.user_data.get('next_function')
    if next_func:
        return await next_func(update, context)
    return ConversationHandler.END


async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–û—Ç–º–µ–Ω–∞",
        reply_markup=get_main_keyboard(),
    )

    return ConversationHandler.END
